*, *::after, *::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@font-face {
    font-family: PopLight ;
    src: url(./fonts/Poppins-Light.ttf);
}

@font-face {
    font-family: PopRegular ;
    src: url(./fonts/Poppins-Regular.ttf);
}

@font-face {
    font-family: PopMedium ;
    src: url(./fonts/Poppins-Medium.ttf);
}

body {
    font-family: PopLight;
}

.portfolio {
    color: white;
    background: radial-gradient(#1d2e63, #00031C);
}

nav {
    /* 1. We will specify a height for the navigation
       2. Then we are specifing that if the screen is 100% then the nav content will only occupy like 90% of it.
       3. After that we are giving margin auto which will basically assign left and right margin to 5%.*/
    min-height: 10vh;
    width: 90%;
    margin: auto;

    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px, 0px;
}

.page {
    min-height: 90vh;
    display: grid;
    /* This will divide the screen into 5% 30% 30% 30% 5% */
    grid-template-columns: 5% 1fr 1fr 1fr 5%;
}

.logo {
    font-size: 20px;
}

.hero {
    overflow: hidden;
    height: 350px;
    align-self: center;
    justify-self: center;
    display: flex;
}

.hero img {
    height: 350px;
    transition: transform 0.3s ease-out;
    cursor: pointer;
}

.model_right {
    transform: translate(0%, 10%);
}

.model_left {
    transform: translate(0%, -10%);
}

.hero:hover .model_right {
    transform: translate(0%, 0%);
}

.hero:hover .model_left {
    transform: translate(0%, 0%);
}

.details {
    grid-column: 2/3;
    align-self: end;
}

.details h1 {
    font-size: 42px;
    font-family: PopRegular;
}

.details h2 {
    font-size: 30px;
    padding: 20px 0px;
}

.details p {
    font-size: 18px;
    padding: 20px 0px 50px 0px;
}

.pages {
   position: absolute;
   right: 5%;
   top: 50%;
   transform: translateY(-50%); 
}

.pages > div {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.pages h3 {
    padding: 20px;
    font-size: 18px;
}

.pages svg{
    cursor: pointer;
    opacity: 0.5;
    transform: scale(1.2);
}

.pages svg.active{
    opacity: 1.0;
}

.pages svg:hover {
    animation: dot 0.5s ease-in-out infinite alternate;
}

@keyframes dot{
    0% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(2.4);
    }
}

.banner {
    height: 50vh;
    width: 100%;
    position: relative;
}

.banner img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: top;
}

.author {
    position: absolute;
    top: 70%;
    left: 50%;
    transform: translate(-50%, -70%);
    color: white;
    text-shadow: 2px 2px 2px rgba(0, 0, 0,0.7);
}

.author h1 {
    font-size: 42px;
}

.author h3 {
    padding: 10px 0px;
    font-size: 30px;
}

.story, .my-work {
    display: flex;
    justify-content: space-between;
    width: 90%;
    margin: auto;
    padding: 80px 0px;
}

.story_description, 
.work_description {
    width: 50%;
}

.story_description h3 , .work_description h3 {
    font-size: 36px;
    padding-bottom : 30px;
}

.story_description p, .work_description p {
    font-size: 20px;
    padding: 15px 0px;
}

.work-gallery {
    display: grid;
    grid-template-columns: repeat(3, 150px);
}

.work-gallery img {
    width: 100%;
    height: 100%;
}

@media (max-width:768px) {
    .page {
        grid-template-columns: 5% 1fr 5%;
        grid-template-rows: 2fr 1fr;
        align-items: center;
    }

    .hero {
        grid-column: 2/3;
        height: auto;
    }

    .hero img {
        height: 350px;
    }

    .details {
        grid-row: 2/3;
        grid-column: 2/3;
        text-align: center;
    }

    .details h1 {
        font-size: 30px;
        font-family: PopRegular;
    }
    
    .details h2 {
        font-size: 22px;
        padding: 20px 0px;
    }
    
    .details p {
        font-size: 14px;
        padding: 20px 0px 50px 0px;
    }

    .story,  .my-work{
        flex-direction: column;
    }

    .story_description, .work_description {
        width: 90%;
        margin: auto;
    }


    /* so we are defining a responsive grid which will act as per the space
    available at that moment, by minmax we have given that 200px should be the 
    smallest space it should not go beyond that. */
    .work-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    .profile {
        padding-top: 30px;
        text-align: center;
    }
}

.chef, .hairstylist {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    width: 100%;
    bottom: 0%;
    left: 0%;
}

.hero a{
    display: flex;
}

.nav-open {
    position: absolute;
    height: 50vh;
    background-color: white;
    top: 0px;
    left: 0px;
    width: 100%;
    z-index: 2;
    color: black;
    display: grid;
    grid-template-columns: 5% 1fr 1fr 5%;
    justify-items: center;
    align-items: center;
    text-align: center;
    transform: translateY(-100%);
}

.contact {
    grid-column: 2/3;
}

.nav-open h3{
    font-size: 26px;
    padding-bottom: 40px;
}

.nav-open p{
    font-size: 18px;
}

.social-links img {
    padding: 0px 20px;
}

.menu, .logo {
    z-index: 3;
}